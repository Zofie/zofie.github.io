//
// Mixins
//

// Horizontal responsive navigation.
// @include list-nav on <ul> or <ol>;
// @include horizontal-nav on <ul> or <ol>;

@mixin list-nav {
	list-style: none;
	margin: 0;
	padding: 0;
}

@mixin horizontal-nav {
	li, a {
		display: block;
		float: left;
		zoom: 1;
	}
}

// Calculate text-color based on background-color

@mixin text-color($c1) {
	// Calculations based on https://vimeo.com/60224584
	@if (.2126*red($c1) + .7152*green($c1) + .0722*blue($c1))/255 <= .5 {
		color: mix(#FFF,$c1,95%);
	} @else {
		color: mix(#000,$c1,70%);
	}
}

// UI mixins.

// Cross browser background opacity.

@mixin background-opacity($color, $alpha) {
	$rgba: rgba($color, $alpha);
	$ie-hex-str: ie-hex-str($rgba);
	background-color: transparent;
	background-color: $rgba;
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
	zoom: 1;
}

// Baseline mixins

// Vertical padding based on the base line-height
// @include padding-tb(#top, #bottom);

@mixin padding-tb($top: 1, $bottom: 0) {
	padding-top: $alpha-line-height * 1em * $top;
	padding-bottom: $alpha-line-height * 1em * $bottom;
}

// Padding-bottom based on the base line-height
// @include padding-bottom(#bottom),

@mixin padding-bottom($bottom: 1) {
	padding-bottom: $alpha-line-height * 1em * $bottom;
}

// Padding-top based on the base line-height
// @include padding-top(#top);

@mixin padding-top($top: 1) {
	padding-top: $alpha-line-height * 1em * $top;
}

// Vertical margin based on the base line-height
// @include margin-tb(#top, #bottom)

@mixin margin-tb($top: 1, $bottom: 0) {
	margin-top: $alpha-line-height * 1em * $top;
	margin-bottom: $alpha-line-height * 1em * $bottom;
}

// Margin-bottom based on the base line-height
// @include margin-bottom(#bottom);

@mixin margin-bottom($bottom: 1) {
	margin-bottom: $alpha-line-height * 1em * $bottom;
}

// Border-box polyfill helper.
// @include border-box;

@mixin border-box {
	box-sizing: border-box;
}

// Media query mixin.
// @include mq(#point, #query1, #query2);

@mixin mq($point, $query1: min, $query2: width) {
	@media (#{$query1}-#{$query2}: $point) {
		@content;
	}
}

// Vertically center any object within its container. Works in IE9 and up.
// @include vertical-center;

@mixin vertical-center {
	position: relative;
	top: 50%;
	transform: translateY(-50%);
}

// Clearfix.
// @include clearfix;

@mixin clearfix {
	*zoom : 1;

	&:before,
	&:after {
		display: table;
		content : "";
	}

	&:after {
		clear : both;
	}
}

// Prevent Long URLâ€™s From Breaking Out of Container.
// http://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container

@mixin word-break {
	word-break: break-all;
	hyphens: auto;
}

// A better way to hide text
// @include hide-text;

@mixin hide-text {
	font: 0/0 a;
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0;
}

// Image
@mixin image($filename) {
	background-image: url('/img/png/' + $filename + '.png');

	.svg & {
		background-image: url('../img/svg/' + $filename + '.svg');
	}
}
